/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { UploadPdfApiUploadPdfPostQueryParams, UploadPdfApiUploadPdfPostMutationResponse } from "../types/UploadPdfApiUploadPdfPost";
import { faker } from "@faker-js/faker";
import { createBodyUploadPdfApiUploadPdfPost } from "./createBodyUploadPdfApiUploadPdfPost";
import { createHTTPValidationError } from "./createHTTPValidationError";
import { createUploadResponse } from "./createUploadResponse";

export function createUploadPdfApiUploadPdfPostQueryParams(data?: Partial<UploadPdfApiUploadPdfPostQueryParams>): UploadPdfApiUploadPdfPostQueryParams {
  
  return {
  ...{"user_id": faker.string.alpha()},
  ...data || {}
  }
}

/**
 * @description Successful Response
 */
export function createUploadPdfApiUploadPdfPost200() {
  
  return createUploadResponse()
}

/**
 * @description Validation Error
 */
export function createUploadPdfApiUploadPdfPost422() {
  
  return createHTTPValidationError()
}

export function createUploadPdfApiUploadPdfPostMutationRequest() {
  
  return createBodyUploadPdfApiUploadPdfPost()
}

export function createUploadPdfApiUploadPdfPostMutationResponse(data?: Partial<UploadPdfApiUploadPdfPostMutationResponse>): UploadPdfApiUploadPdfPostMutationResponse {
  
  return data || faker.helpers.arrayElement<any>([createUploadPdfApiUploadPdfPost200()])
}